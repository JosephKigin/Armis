@page "{aMessage?}/{isMessageGood:bool?}"
@model ArmisWebsite.Pages.Quality.Specification.SpecProcessAssignReviewModel
@{
    ViewData["Title"] = "SpecProcessAssignReview";
}

<head>
    <script type="text/javascript" src="~/js/Quality/Specification/SpecProcessAssignReview.js"></script>
</head>

<div class="container-fluid w-75 mb-3">
    <h1>Specification-Process Assignment Review</h1>

    @if (Model.Message != null)
    {
        @*Preloaded message.*@
        <p><partial name="/Pages/shared/partials/popupmessagepartial.cshtml" model="Model.Message" /></p>
    }

    @if (Model.AllSpecProcessAssigns == null)
    {
        <span>No Reviews Needed</span>
    }
    else
    {
        <div class="input-group my-1">
            @*Search by... Filter needs to be added.*@
            <input id="inputStepSearchFilter" type="text" class="form-control border-right-0" placeholder="Search by specification..." onkeyup="searchSpecProcessAssignList(this.value)" />
            <span class="input-group-append bg-white border-left-0">
                <span class="input-group-text bg-transparent"><i class="fa fa-search"></i></span>
            </span>
        </div>

        <form method="post">
            <ul id="allAssignsList" class="list-group border" style="height:42em; overflow-y:scroll">

                @foreach (var specId in Model.AllSpecIds)
                {
                    var allSpasForSpecId = Model.AllSpecProcessAssigns.Where(i => i.SpecId == specId);
                    var spec = allSpasForSpecId.FirstOrDefault().SpecificationRevision; //This is used in order to get the specification information for the "header" section. This is the old spec.
                    var theNewSpec = Model.AllNewSpecs.FirstOrDefault(i => i.SpecId == specId); //This will have a value if the spec reving up is the reason for review.

                    <li class="list-group-item" data-spec="@spec.SpecCode">
                        <a data-toggle="collapse" href="#specGroup_@spec.SpecId">
                            @spec.SpecId.
                            Specification: <b>@spec.SpecCode</b>
                            Rev: <b>@spec.ExternalRev</b>
                            @if (theNewSpec != null)
                            {<i class="fa fa-arrow-right" style="color:goldenrod"></i><b style="color:goldenrod"> @theNewSpec.ExternalRev</b>}

                        </a>

                        @foreach (var specProcessAssign in allSpasForSpecId)
                        {
                            var theNewProcess = Model.AllNewProcessRevModel.FirstOrDefault(i => i.ProcessId == specProcessAssign.ProcessId); //This will have a value if the process reving up is the reason for review.

                            <div id="specGroup_@specProcessAssign.SpecId" class="collapse">
                                <div class="row h-50 border-bottom my-2">
                                    <div class="col-lg-11 h-50">
                                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                                        <a data-toggle="collapse" href="#specProcAssign_@specProcessAssign.SpecId-@specProcessAssign.SpecRevId-@specProcessAssign.SpecAssignId">
                                            @specProcessAssign.SpecAssignId.
                                            Process: <b>@specProcessAssign.ProcessRevision.ProcessId. @specProcessAssign.ProcessRevision.ProcessName</b>
                                            Rev: <b>@specProcessAssign.ProcessRevId</b>
                                            @if (theNewProcess != null)
                                            {<i class="fa fa-arrow-right"></i><b> @theNewProcess.ProcessRevId</b>}
                                        </a>
                                    </div>

                                    @if (specProcessAssign.IsViable == false)
                                    {
                                        <div class="col-lg-1 h-50">
                                            <input type="checkbox" name="SpecProcessAssignmentsToPost" value="@specProcessAssign.SpecId-@specProcessAssign.SpecRevId-@specProcessAssign.SpecAssignId" onchange="toggleKeepBtn(this)" />
                                        </div>
                                    }
                                    else
                                    {
                                        <div class="col-lg-1 h-50">
                                            <input type="checkbox" name="SpecProcessAssignmentsToPost" value="@specProcessAssign.SpecId-@specProcessAssign.SpecRevId-@specProcessAssign.SpecAssignId" />
                                        </div>
                                    }
                                    @if (specProcessAssign.IsViable == false)
                                    {
                                        <text>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</text>
                                        <span class="text-danger">Cannot keep, the specification was reved up.</span>
                                    }


                                    <div id="specProcAssign_@specProcessAssign.SpecId-@specProcessAssign.SpecRevId-@specProcessAssign.SpecAssignId" class="row collapse border-bottom pl-5">
                                        <partial name="/Pages/Quality/Specification/Partials/SpecProcessAssignTablePartial.cshtml" model="specProcessAssign" />
                                    </div>
                                </div>


                            </div>
                        }
                    </li>
                }
            </ul>

            <div class="row">
                <div class="col-lg-8"></div>
                <div class="col-lg-4">
                    <button id="btnKeep" class="btn btn-lg btn-success float-right my-2" asp-page-handler="Keep">Keep</button>
                    <button class="btn btn-lg btn-danger float-right m-2" asp-page-handler="Remove">Remove</button>
                </div>
            </div>
        </form>
    }
</div>