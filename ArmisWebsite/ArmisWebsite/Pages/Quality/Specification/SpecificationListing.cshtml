@page
@model ArmisWebsite.Pages.ProcessMaintenance.SpecificationListingModel
@{
    ViewData["Title"] = "SpecificationListing";
}

<div class="container-fluid w-75">
    <h1>Specification Listing</h1>
    <div id="collapseGroup" class="accordion">
        <div class="row">
            <div class="col-lg-6">
                <div class="input-group my-1">
                    <input class="form-control border-right-0" placeholder="Search..." onkeyup="searchSpecList(this.value)" />
                    <span class="input-group-append bg-white border-left-0">
                        <span class="input-group-text bg-transparent"><i class="fa fa-search"></i></span>
                    </span>
                </div>
                <ul id="specificationList" class="list-group" style="height:42em; overflow-y:scroll">
                    @foreach (var spec in Model.AllSpecs)
                    {
                        if (spec.SpecRevModels != null && spec.SpecRevModels.Any())
                        {
                            var theCurrentSpecRev = spec.SpecRevModels.OrderByDescending(i => i.InternalRev).FirstOrDefault(); //Grabs the most current revision.

                            <li id="@spec.Code" class="list-group-item">
                                <a data-toggle="collapse" href="#specDetails-@spec.Id-@theCurrentSpecRev.InternalRev">
                                    @spec.Id. 
                                    @spec.Code
                                    <b>Rev:</b>
                                    @if (theCurrentSpecRev.ExternalRev.Trim() != "")
                                    {<text>@theCurrentSpecRev.ExternalRev</text>}
                                else
                                { <text>NONE</text>}
                                    <b>Sublevels:</b> [@theCurrentSpecRev.SubLevels.Count()]
                                </a>
                                <a class"btn" style="float:right" asp-page="SpecificationMaintenance" asp-route-CurrentSpecId="@spec.Id"><i class="fa fa-edit" data-toggle="tooltip" title="Edit"></i></a>
                                @if (theCurrentSpecRev.Description.Trim() != "")
                                {<p><b>Description: </b>@theCurrentSpecRev.Description</p>}
                            </li>
                        }
                        else
                        {
                            <li id="@spec.Code" class="list-group-item">
                                @spec.Code [ERROR: No Rev]
                            </li>
                        }

                    }
                </ul>
            </div>

            <div class="col-lg-6">
                <ul class="list-group">
                    @foreach (var spec in Model.AllSpecs)
                    {
                        if (spec.SpecRevModels != null && spec.SpecRevModels.Any())
                        {
                            var theCurrentSpecRev = spec.SpecRevModels.OrderByDescending(i => i.InternalRev).FirstOrDefault(); //Grabs the most current revision

                            <li id="specDetails-@spec.Id-@theCurrentSpecRev.InternalRev" class="collapse" data-parent="#collapseGroup" style="list-style-type:none;">
                                <div class="list-group-item">
                                    <p><b>Code: </b>@theCurrentSpecRev.Description </p>
                                    <p><b>Rev: </b>@theCurrentSpecRev.ExternalRev </p>
                                    @*If there is a sample plan for the current spec rev, an anchor tag and modal will be created that opens and contains sample plan info.*@
                                    @if (theCurrentSpecRev.SamplePlan != null)
                                    {
                                        <a data-toggle="modal" href="#modalSamplePlan-@spec.Id-@theCurrentSpecRev.InternalRev">Sample Plan</a><br />

                                        <div class="modal fade" id="modalSamplePlan-@spec.Id-@theCurrentSpecRev.InternalRev">
                                            <div class="modal-dialog modal-lg" style="max-width:90%">
                                                <div class="modal-content">
                                                    <div class="modal-header">
                                                        <h5>@theCurrentSpecRev.SamplePlan.Description</h5>
                                                        <h5 class="modal-title">Sample Plan</h5>
                                                    </div>
                                                    <div class="modal-body">
                                                        <div class="card">
                                                            <partial name="/Pages/Quality/Inspection/Partials/SamplePlanTablePartial.cshtml" model="theCurrentSpecRev.SamplePlan" />
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    }

                                    <b>Sublevels</b>
                                    <ul class="nested">
                                        @foreach (var subLevel in theCurrentSpecRev.SubLevels)
                                        {
                                            <li>
                                                @subLevel.Name
                                                <ul class="nested">
                                                    @foreach (var choice in subLevel.Choices)
                                                    {
                                                        <li>
                                                            @choice.Description
                                                        </li>
                                                    }
                                                </ul>
                                            </li>
                                        }
                                    </ul>
                                </div>
                            </li>
                        }
                    }
                </ul>
            </div>
        </div>
    </div>
</div>
<script>
    function searchSpecList(searchTerm) {
        var specListItems = document.getElementById("specificationList").getElementsByTagName("li");

        for (var i = 0; i < specListItems.length; i++) {
            if (specListItems[i].id.toLowerCase().startsWith(searchTerm.toLowerCase())) {
                specListItems[i].hidden = false;
            }
            else {
                specListItems[i].hidden = true;
            }
        }
    }
</script>