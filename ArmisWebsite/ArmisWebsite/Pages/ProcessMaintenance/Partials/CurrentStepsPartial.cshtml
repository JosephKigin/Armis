@model Armis.BusinessModels.ProcessModels.ProcessRevisionModel
@{
    var borderColor = "grey";
    if (Model.RevStatusCd == "UNLOCKED") { borderColor = "green"; }
}
<h5>Current Steps</h5>
<div class="p-3" style="border:dashed @borderColor;">
    <ul id="sortableCurrentSteps" class="list-group" style="max-height:42em; overflow-y:scroll;">

        @foreach (var step in Model.Steps)
        {
            <li class="list-group-item" id="currentStep-@step.StepId">
                <h5>
                    <i class="fa fa-arrows-alt handle"></i>
                    <a data-toggle="collapse" href="#currentStepDetails-@step.StepId">@step.StepName [@step.Operation.Code]</a>
                </h5>
                <div id="currentStepDetails-@step.StepId" class="collapse">
                    <div class="card card-body">
                        @if (step.SignOffIsRequired == true)
                        {<p class="text-danger">Sign-Off Required</p>}
                        <p><b>Instructions: </b>@step.Instructions</p>
                    </div>
                </div>
            </li>
        }
    </ul>
</div>
@if (Model.RevStatusCd == "UNLOCKED")
{
    <div id="sortableTrash" class="mt-3" style="width:inherit; height:80px; border:dashed red; text-align:center;">
        <i class="fas fa-trash" style="color:red;"></i>
    </div>
    <script>
        new Sortable(sortableTrash,
        {
            group: {
                name: 'steps'
            },
            onAdd: function (evt) {
                var el = evt.item;
                el.parentNode.removeChild(evt.item);
            }
            });

        new Sortable(sortableCurrentSteps,
        {
            group: {
                name: 'steps'
            },
            handle: '.handle',
            animation: 150,
            ghostClass: 'bg-warning'
        });
    </script>
}

<script>

    

</script>