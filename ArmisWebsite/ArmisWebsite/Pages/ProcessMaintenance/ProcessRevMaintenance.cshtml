@page "{aProcessId:int?}/{aMessage?}"
@model ArmisWebsite.ProcessRevMaintenanceModel
@{
    ViewData["Title"] = "Process Maintenance";
}

<head>
    <script type="text/javascript" src="https://cdn.jsdelivr.net/npm/sortablejs@latest/Sortable.min.js"></script>
    <link href="~/lib/fontawesome-free-5.12.0-web/css/all.min.css" rel="stylesheet" />

    <script>

    </script>

</head>
<body>
    <h1>Process Rev Maintenance</h1> <a class="btn btn-danger" href="ProcessRevMaintenance">Clear</a>

    <button class="btn btn-primary" id="btnFindProcessModal" data-toggle="modal" data-target="#modalProcessSelect">Find Process</button>

    <div class="modal fade" id="modalProcessSelect">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Choose a Process Revision To Edit</h5>
                </div>
                <div class="modal-body">
                    <div class="row">
                        <div class="col-lg">
                            <form method="get">
                                <select class="list-group" size="12" asp-for="CurrentProcessId">
                                    @foreach (var process in Model.AllProcesses)
                                    {
                                        <option value="@process.ProcessId" class="list-group-item" onmouseup="LoadStepModal(@process.ProcessId, `@process.Name`)">
                                            @process.Name -
                                            Rev:
                                            @if (process.Revisions != null && process.Revisions.Any())
                                            {
                                                @process.Revisions.Last().ProcessRevId
                                                if (process.Revisions.Last().RevStatusCd == "UNLOCKED")
                                                {
                                                    @process.Revisions.Last().RevStatusCd
                                                }
                                            }
                                            else
                                            {
                                                <p>NONE</p> @*tags aren't supposed to be in the <option> tag, so it doesn't actually render the <p> tag, but it is the only way to escape the c# code.*@
                                            }

                                        </option>
                                    }
                                </select>
                                <button class="btn btn-primary my-2">Ok</button>
                            </form>
                        </div>
                        <div class="col-lg">
                            <h5 id="modalStepTitle"></h5>
                            <ul id="modalStepPlaceholder" class="list-group">
                            </ul>
                        </div>
                    </div>
                </div>

            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-lg-4">
            <h3>Process Details</h3>
            <div class="card card-body">
                <h5><b>Name: </b>@Model.CurrentProcess.Name</h5>
                <h5><b>Customer: </b>@Model.CurrentProcess.CustId</h5>
                @if (Model.CurrentRev != null)
                {
                    <h5><b>Current Rev: </b>@Model.CurrentRev.ProcessRevId</h5>
                    <h5><b>Status: </b>@Model.CurrentRev.RevStatusCd</h5>
                }
                else
                {
                    <h5><b>Current Rev: </b>NONE</h5>
                }

            </div>

            <div class="card card-body">
                @{
                    var btnRevUpDisable = "disabled";
                    var btnRevUpClasses = "btn btn-outline-secondary m-1";

                    var btnLockDisable = "disabled";
                    var btnLockClasses = "btn btn-outline-secondary m-1";

                    var btnSaveDisable = "disabled";
                    var btnSaveClasses = "btn btn-outline-secondary m-1";

                    var btnDeleteDisable = "disabled";
                    var btnDeleteClasses = "btn btn-outline-secondary m-1";

                    if (Model.CurrentRev == null)
                    {
                        btnRevUpDisable = "";
                        btnRevUpClasses = "btn btn-primary m-1";
                    }
                    else if (Model.CurrentRev.RevStatusCd == "LOCKED")
                    {
                        btnRevUpDisable = "";
                        btnRevUpClasses = "btn btn-primary m-1";
                    }
                    else if (Model.CurrentRev.RevStatusCd == "UNLOCKED")
                    {
                        btnLockDisable = "";
                        btnLockClasses = "btn btn-primary m-1";
                        btnSaveDisable = "";
                        btnSaveClasses = "btn btn-primary m-1";
                        btnDeleteDisable = "";
                        btnDeleteClasses = "btn btn-danger m-1";
                    }
                }
                @*4 different forms.  One for the "Additional Details" modal, and 3 for the buttons "lock", "Save", and "Delete"*@
                <button class="@btnRevUpClasses" @btnRevUpDisable data-toggle="modal" data-target="#modalRevUpComment">Rev Up</button>
                <button type="submit" class="@btnLockClasses" @btnLockDisable>Lock</button>
                <button type="submit" class="@btnSaveClasses" @btnSaveDisable>Save</button>
                <button type="submit" class="@btnDeleteClasses" @btnDeleteDisable>Delete</button>

                <div class="modal fade" id="modalRevUpComment">
                    <div class="modal-dialog modal-lg">
                        <div class="modal-content">
                            <div class="modal-header">
                                <h5 class="modal-title">Additional Details</h5>
                            </div>
                            <div class="modal-body">
                                <form>
                                    <div class="form-group">
                                        <label><b>Comment:</b></label>
                                        <textarea class="form-control"></textarea>
                                    </div>
                                    <div class="form-group">
                                        <label><b>Employee Number:</b></label>
                                        <input class="form-control" type="text" />
                                    </div>
                                    <button type="submit" class="@btnRevUpClasses" @btnRevUpDisable>Rev Up</button>
                                </form>

                            </div>

                        </div>
                    </div>
                </div>

            </div>
        </div>

        <div class="col-lg-4">
            @if (Model.CurrentRev != null)
            {
                @if (Model.CurrentRev.Steps.Any())
                {
                    <partial name="Partials/CurrentStepsPartial" model="Model.CurrentRev" />
                }
            }

        </div>

        <div class="col-lg-4">
            @if (Model.CurrentRev != null)
            {
                @if (Model.CurrentRev.RevStatusCd == "UNLOCKED")
                {
                    <partial name="Partials/AllStepsPartial" model="Model.AllSteps" />
                }
            }

        </div>
    </div>
</body>

<script>
 //TODO:This is the same code that is in Process Listing. See if this can be put into its own file and pulled into each of these htmls.
    function LoadStepModal(aProcessId, aProcessName) {
        if (aProcessId > 0) {
            var xhr = new XMLHttpRequest();
            xhr.open('GET', '@Model._apiAddress' + 'api/processes/GetHydratedProcessRevision/' + aProcessId, true)
            xhr.send();

            xhr.onload = function () {
                var rev = JSON.parse(xhr.responseText);
                console.log(rev);
                var stepItemsHtml = '';
                if (xhr.status != 404) {
                    for (var i = 0; i < rev.Steps.length; i++) {
                        var signOffReqHtml = '';
                        if (rev.Steps[i].SignOffIsRequired == true) {
                            signOffReqHtml = `<p class="text-danger">Sign-Off Required</p>`;
                        }
                        stepItemsHtml +=

                            `<li class="list-group-item">
                                                <a data-toggle="collapse" href="#stepItem` + i + `">` + rev.Steps[i].StepName + `</a>
                                                <div id="stepItem` + i + `" class="collapse">
                                                    <div class="card card-body">`+
                            signOffReqHtml +
                            `<p>` + rev.Steps[i].Instructions + `</p>
                                                    </div>
                                                </div>
                                            </li>`
                    };
                }
                else {
                    stepItemsHtml = 'There are no steps for this process.';
                }

                document.getElementById("modalStepPlaceholder").innerHTML = stepItemsHtml;
                document.getElementById("modalStepTitle").innerHTML = aProcessName.toString();
            };
        }
    };

</script>